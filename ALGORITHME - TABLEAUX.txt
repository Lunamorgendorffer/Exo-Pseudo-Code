ALGORITHME - TABLEAUX

Exercice 1: 
Ecrire un algorithme qui declare et remplisse un tableau de 7 valeurs numeriques en les mettant toutes à zero.

tableau nombre , Variable  i en numerique

Debut
Pour (i <-- 0, i <-- 6; i++) ALORS
    nombre[i] = 0
Imprimer le tableau
fin

Exercice 2
Ecrire un algorithme qui declare et remplisse un tableau contenant les six voyelle de l'alphabet latin
tableau [] en chaine de caracrère 
Debut
tableau[0] ← "a"
tableau[1] ← "e"
tableau[2] ← "i"
tableau[3] ← "o"
tableau[4] ← "u"
tableau [5] ← "y"
Fin

Exercice 3

Ecrire un algorithme qui déclare un tableau de 9 notes, dont on fait ensuite saisir les valeurs par l’utilisateur.

Tableau notes[8] en Numérique
Variable i en Numérique
Debut
Pour i ← 0 à 8
  Ecrire "Entrez la note numéro "
  Lire Notes[i]
i ++
Fin


Exercice 4
Que produit l’algorithme suivant ?
Tableau Nb[5] en Entier
Variable i en Entier
Début
Pour i ← 0 à 5
  Nb[i] ← i * i ex: 1x1 2x2 4x4
i suivant 

= [ 0 1 4 9 16 25]

Pour i ← 0 à 5
  Ecrire Nb[i]
i suivant
Fin
Peut-on simplifier cet algorithme avec le même résultat ?
Oui
Tableau nombres [5] en Entier
Variable i en Entier

Début
Pour i ← 0 à 5
  Nb[i] ← i * i ex: 1x1 2x2 4x4
  Ecrire nombres [i]
i++

Exercice 5
debut 
nombre [0] <-- 1
Pour k<-- 1 à 6
  nombres [k] <-- nombres [K-1] + 2
k++

Exercice 6
Cet algorithme remplit un tableau de 8 valeurs : 1, 1, 2, 3, 5, 8, 13, 21
[1,1,2,3,5,8,13,21]

Exercice 7

Ecrivez la fin de l’algorithme de l'exercice  3 afin que le calcul de la moyenne des notes soit effectué et affiché à l’écran.

Tableau notes[8] en Entier
Variable somme, i en Entier

Debut
somme <-- 0
Pour i ← 0 à 8
  Ecrire "Entrez la note numéro "
  Lire Notes[i]
  somme <-- somme + notes [i]
i ++

Ecrire Moyenne est de "somme/9" 
Fin

Exercice 8

Ecrivez un algorithme permettant à l’utilisateur de saisir un nombre quelconque de valeurs, qui devront être stockées dans un tableau. 
L’utilisateur doit donc commencer par entrer le nombre de valeurs qu’il compte saisir. Il effectuera ensuite cette saisie. 
Enfin, une fois la saisie terminée, le programme affichera le nombre de valeurs négatives et le nombre de valeurs positives.

tableau valeur[] en numerique 
Variables i, nombre, nombrepositif, nombrenegatif en numerique 

Debut
ecrire "donnez nombre" 
Lire nombre
redim nombres [valeur - 1]
nombrepositif <-- 0
nombrenegatif <-- 0



Pour (i ← 0 à (valeur-1)*) * on fait -1 car on se refere à la position sur le tableau car le tableau commence en par 0
  ecrire "donnez nombre"
  Lire T[i] on attribue à la position i du tableau 
  Si T[i] > 0 alors
    nombrepositif ← nombrepositif + 1
  Sinon si nombres [i] < 0
    nombrenegatif ← nombrenegatif + 1
  Finsi
i++
Ecrire "Le nombre de positif est de  "nombrepositif" "
Ecrire "Le nombre de  négatif est "nombrenegatif" "
Fin


Exercice 9
Ecrivez un algorithme calculant la somme des valeurs d’un tableau (on suppose que le tableau a été préalablement saisi).

Tableau nombres[] en entier
variable valeur en entier
variable i en entier
variable somme en entier
Debut
 Ecrire "donnez nombre"
 Lire valeur
Redim nombres[valeur-1]
somme<- 0
Pour (i <- 0 à (valeur-1))                                
        somme <- somme + nombres[i]
i suivant
ecrire "la somme est : " somme
Fin

Exercice 10

Ecrivez un algorithme constituant un tableau, à partir de deux tableaux de même longueur préalablement saisis. 
Le nouveau tableau sera la somme des éléments des deux tableaux de départ.

Tableau 1 : 4	8	7	9	1	5	4	6

Tableau 2 :7	6	5	2	1	3	7	4

Tableau à constituer : 11	14	12	11	2	8	11	10


Tableaux T1[], T2[], T3[] en Entier
Variables  i, valeur en Entier
Debut
redim t1 [valeur - 1]
redim t2 [valeur - 1]
redim t3 [valeur - 1]
Debut
Pour (i ← 0 à (valeur - 1))
  T3[i] ← T1[i] + T2[i]
i++
Fin

Exercice 11

tableaux tab1[], tab2[] en numerique
variable valeur1 en entier
variable valeur2 en entier
variable somme en entier
variables i, j en entier
Debut
Ecrire "donnez un nombre de valeur pour le tableau 1"
Lire valeur1
Ecrire "donner un nombre de valeur pour le tableau2"
Lire valeur2
redim tab1[valeur1 - 1]                                 
redim tab2[valeur2 -1]
somme<- 0
Pour i<- 0 à valeur1 -1
    Pour j <- 0 à valeur2- 1
        somme<- somme + tab1[i] * tab2[i]
    j++
i++
Fin

Exercice 12

tableau nombres[] en numerique
variable valeur en entier
variable i en entier
Debut
 Ecrire "donnez nombre"
 Lire valeur
Redim nombres[valeur-1]
Pour (i <- 0 à (valeur-1))                                
    Ecrire "donnez un nombre"
    lire nombres[i]  
i suivant
Pour (i <- 0 à (valeur-1))
    nombres[i] <- nombres[i] + 1
    Ecrire nombres[i]
i suivant
Fin

Exercice 13

Ecrivez un algorithme permettant, toujours sur le même principe, à l’utilisateur de saisir un nombre déterminé de valeurs. 
Le programme, une fois la saisie terminée, renvoie la plus grande valeur en précisant quelle position elle occupe dans le tableau. 
On prendra soin d’effectuer la saisie dans un premier temps, et la recherche de la plus grande valeur du tableau dans un second temps.

tableau nombres[] en numerique
variable valeur en entier
variable i en entier
variable position en entier
Debut
 Ecrire "donnez nombre"
 Lire valeur                                                       
Redim nombres[valeur-1]
Pour (i <- 0 à (valeur-1))                                
    Ecrire "donnez un nombre"
    lire nombres[i]  
i suivant
position<- 0
Pour (i <- 0 à (valeur-1))
    Si nombres[i] > nombres[position] Alors
    position <- i
    FinSi
i++
Ecrire "la plus haute valeur est " nombres[position] "et sa position est:" position
Fin


Exercice 14

Toujours et encore sur le même principe, écrivez un algorithme permettant, à l’utilisateur de saisir les notes d'une classe. 
Le programme, une fois la saisie terminée, renvoie le nombre de ces notes supérieures à la moyenne de la classe.

Variables valeur, somme, moyenne, notesSupMoyenne en numerique
tableau notes[] en numerique
Debut
Ecrire "donnez nombre"
lire valeur
redim notes[valeur -1]
Pour i<- 0 à valeur-1
    Ecrire "donnez une note"
    Lire notes[i]
i++
somme<- 0
Pour (i <- 0 à (valeur-1))
    somme<- somme + notes[i]
i++
moyenne <- somme / valeur
notesSupMoyenne <- 0 
Pour (i <- 0 à (valeur-1))
    Si notes[i] > moyenne Alors
    notesSupMoyenne <- notesSupMoyenne + 1
i suivant
Ecrire "il y a " notesSupMoyenne "notes supérieures à" moyenne
Fin